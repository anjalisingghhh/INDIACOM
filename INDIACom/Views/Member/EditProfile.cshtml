@model INDIACom.Models.MemberModel
@{
    Layout = null;
    var empty = Enumerable.Empty<SelectListItem>();
}


<h1 style="color: blue;">Edit Profile</h1>
<p>Fields marked with <span style="color: red;">*</span> are required.</p>


@if (ViewBag.Message != null)
{
    <p style="color: green;"><b>@ViewBag.Message</b></p>
}
@using (Html.BeginForm("EditProfile", "Member", FormMethod.Post, new { @class = "", enctype = "multipart/form-data", id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()

    <!-- Display Validation Errors -->
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table>
        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Salutation</td>
            <td>
                @Html.DropDownListFor(m => m.Salutation, new List<SelectListItem> {
                    new SelectListItem { Text = "Please Select a Salutation", Value = "" },
                    new SelectListItem { Text = "Ms.", Value = "Ms." },
                    new SelectListItem { Text = "Mrs.", Value = "Mrs." },
                    new SelectListItem { Text = "Mr.", Value = "Mr." }
                }, new { @class = "form-control", required = "required", name = "Salutation" })
                <div class="text-danger" id="SalutationError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Name</td>
            <td>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", size = "50" })
                <div class="text-danger" id="NameError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Address</td>
            <td>
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", size = "50" })
                <div class="error" id="AddressError" style="margin-bottom: 15px;"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Country</td>
            <td>
                @Html.DropDownListFor(m => m.CountryID, empty, "--Select Country--")
                <div class="text-danger" id="CountryError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>State</td>
            <td>
                @Html.DropDownListFor(m => m.StateID, empty, "--Select State--")
                <div class="text-danger" id="StateError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>City</td>
            <td>
                @Html.DropDownListFor(m => m.CityID, empty, "--Select City--")
                <div class="text-danger" id="CityError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Pincode</td>
            <td>
                @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", size = "50" })
                <div class="error" id="PincodeError" style="margin-bottom: 15px;"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>E-Mail</td>
            <td>
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", size = "50" })
                <div class="error" id="EmailError" style="margin-bottom: 15px;"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right"><span style="color: red">* </span>Mobile No.</td>
            <td>
                @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control", size = "50" })
                <div class="error" id="MobileError" style="margin-bottom: 15px;"></div>
            </td>
        </tr>
        <tr>
            <td width="256" align="right"><span style="color: red">* </span>Biodata (.pdf Only)</td>
            <td><input type="file" id="file" name="file" class="form-control" accept=".pdf" required /></td>
        </tr>
        <tr>
            <td width="256" align="right"><span class="asterix" style="color: red">* </span>Interested Event</td>
            <td> @Html.DropDownListFor(m => m.EventID, empty, "--Select Event--")</td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>CSI Membership No.</td>
            <td>
                @Html.TextBoxFor(model => model.CSI_No, new { @class = "form-control", size = "50" })
                <div class="error" id="CSI_Error" style="margin-bottom: 15px;"></div>
            </td>

        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>IEEE/ISTE/IETE/IITP/IMP Membership No.</td>
            <td>
                @Html.TextBoxFor(model => model.IEEE_No, new { @class = "form-control", size = "50" })
                <div class="error" id="IEEE_Error" style="margin-bottom: 15px;"></div>
            </td>

        </tr>
        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Organisation</td>
            <td>
                @Html.DropDownListFor(m => m.OrgID, empty, "--Select Org--")
            </td>
        </tr>
        <tr>
            <td width="256" align="right" valign="top">
                <span style="color: red">* </span> Category
            </td>
            <td>
                @Html.DropDownListFor(m => m.Category, new List<SelectListItem> {
                    new SelectListItem { Text = "[Select Category]", Value = "" },
                    new SelectListItem { Text = "Research Scholar", Value = "Research Scholar" },
                    new SelectListItem { Text = "Full-Time Student", Value = "Full-Time Student" },
                    new SelectListItem { Text = "Faculty", Value = "Faculty" },
                    new SelectListItem { Text = "Industrial Representative", Value = "Industrial Representative" }
                }, new { @class = "form-control", required = "required", name = "Category" })
                <div class="text-danger" id="SalutationError"></div>
            </td>
        </tr>

        <tr>
            <td width="256" align="right"><span class="asterix" style="color: red">* </span>Password</td>
            <td>
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", size = "50" })
                @*<div>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</div>*@
            </td>
        </tr>

        <tr>
            <td width="256" align="right" valign="top"><span style="color: red">* </span>Confirm Password</td>
            <td>
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", size = "50" })
                <div class="error" id="PasswordError" style="margin-bottom: 15px;"></div>
            </td>
        </tr>
    </table>

    <div id="OrgDetails" class="hidden" style="display: none">
        <table class="form"
               border="0"
               width="760"
               id="table4"
               cellpadding="5">
            <tbody>
                <tr>
                    <td colspan="2" class="content">
                        <b>Organisation Details</b><span class="microfont">
                            <br />
                            Fields marked with an asterisk
                            <span class="asterix"> *</span> are required.<br />
                            Note: Various certificates acknowledging your
                            contributions would be generated based on our records
                            submitted by you. In future, when registering for an
                            event, please do take time out and update your profile
                            to avoid unnecessary inconvenience.
                        </span>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <b>
                            Why am I being asked to fill up organisational
                            details?
                        </b><br />
                        Filling up the form, would allow us to track other members
                        from your organisation. Members from registered
                        organisation may get group discounts and other benefits.
                        Also it would help us enhance our communication with your
                        organisation.
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>Organisation Name
                    </td>
                    <td width="478">
                        @Html.TextBoxFor(model => model.OrgName, new { @class = "form-control", size = "50" })
                        <div class="error" id="OrgNameError">
                            (Please type the organisation's name.)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>Organisation Short Name
                    </td>
                    <td width="478">
                        @Html.TextBoxFor(model => model.OrgShortName, new { @class = "form-control", size = "50" })
                        <div class="error" id="OrgShortNameError">
                            (Please type the organisation's short name.)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>Address
                    </td>
                    <td width="478">
                        @Html.TextAreaFor(model => model.OrgAddress, new { @class = "form-control", rows = "4", cols = "30" })

                        <div class="error" id="OrgAddressError">
                            (Please type the organisation's address.)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>Name of HOD / Contact
                        Person
                    </td>
                    <td width="478">
                        @Html.TextBoxFor(model => model.OrgContactPerson, new { @class = "form-control", size = "50" })
                        <div class="error" id="OrgContactNameError">
                            (Please type the name of the person to whom we can
                            contact for further reference. The name can contain only
                            alphabets, spaces and ".")
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>E-Mail
                    </td>
                    <td width="478">
                        @Html.TextBoxFor(model => model.OrgEmail, new { @class = "form-control", size = "50" })
                        <div class="error" id="OrgEmailError">
                            (Please type the organisation's e-mail address.)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">&nbsp;</td>
                    <td>
                        <span class="microfont">Country Code - State Code - Phone Number</span>
                        <br />
                        <span class="microfont">
                            (India 91)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - (Delhi
                            11)
                        </span>
                    </td>
                </tr>
                <tr>
                    <td width="256" align="right" valign="top">
                        <span class="asterix">* </span>Phone
                    </td>
                    <td width="478">
                        <input name="txtOrgPhone"
                               id="txtOrgPhone"
                               type="hidden" />
                        <input type="text"
                               name="txtOrgPhone1"
                               size="5"
                               style="text-align: right" />
                        -
                        <input type="text"
                               name="txtOrgPhone2"
                               size="5"
                               style="text-align: right" />
                        -
                        <input type="text"
                               name="txtOrgPhone3"
                               size="10"
                               style="text-align: right" />&nbsp; <span id="spOrgPhone">( - - )</span>
                        <div class="error" id="OrgPhoneError">
                            (Please type the organisation's phone number. The phone
                            number can contain only numerals.)
                        </div>
                    </td>
                </tr>

                <tr>
                    <td width="256" align="right">&nbsp;</td>
                    <td width="478">&nbsp;</td>
                </tr>
            </tbody>
        </table>
    </div>


}
<button type="button" id="submitBtn">Submit</button>
<input type="reset" value="Reset">



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>


<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="~/Content/assets/js/jquery.min.js"></script>
<script src="~/Scripts/common.js"></script>
<script src="~/Content/assets/plugins/datatable/js/jquery.dataTables.min.js"></script>
<script src="~/Content/assets/plugins/datatable/js/dataTables.bootstrap5.min.js"></script>
<script src="~/Content/assets/js/app.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>

<script type="text/javascript">
    var form = $('#__AjaxAntiForgeryForm');
    var token = $('input[name="__RequestVerificationToken"]', form).val();

    function populateDropdown(dropdownId, data) {
        var dropdown = $("#" + dropdownId);
        dropdown.empty(); // Clear previous options

        dropdown.append('<option value="">[Select]</option>');

        $.each(data, function (index, item) {
            dropdown.append('<option value="' + item.Value + '">' + item.Text + '</option>');
        });

        if (dropdownId === "OrgID") {
            dropdown.append('<option value="Others">Others</option>');
        }
    }

    $(document).ready(function () {
        loadEvent();
        loadCountries();
        loadOrg();

        $("#CountryID").change(function () {
            var selectedCountry = $(this).val();
            loadStates({ countryId: selectedCountry });
        });

        $("#StateID").change(function () {
            var selectedCountry = $("#CountryID").val();
            var selectedState = $("#StateID").val();
            loadCities({ countryId: selectedCountry, stateId: selectedState });
        });

        // Log selected value when an event is selected
        $("#EventID").change(function () {
            var selectedEvent = $(this).val();
        });

        $('#OrgID').change(function () {
            var orgid = $(this).val();
            var org = $("#OrgID option:selected").text();

            var form2 = $("#OrgDetails");

            if (org === "Others") {
                form2.removeClass("hidden").show();
            } else {
                form2.addClass("hidden").hide();
            }

        })

        function updateOrgPhone() {
            var phone1 = $("input[name='txtOrgPhone1']").val();
            var phone2 = $("input[name='txtOrgPhone2']").val();
            var phone3 = $("input[name='txtOrgPhone3']").val();
            var fullPhone = phone1 + "-" + phone2 + "-" + phone3;
            $("#txtOrgPhone").val(fullPhone);
            $("#spOrgPhone").text(fullPhone || "( - - )");
        }

        // Attach event listeners
        $("input[name='txtOrgPhone1'], input[name='txtOrgPhone2'], input[name='txtOrgPhone3']").keyup(updateOrgPhone);

        function updateOrgShortName() {
            var orgShortName = $("#OrgShortName").val().trim();
            var orgName = $("#OrgName").val().trim();

            if (orgShortName === "" && orgName !== "") {
                var initials = orgName.split(" ").map(word => word.charAt(0).toUpperCase()).join("");
                $("#OrgShortName").val(initials);
            }

            if (orgShortName === "") {
                $("#OrgShortNameError").show();
            } else {
                $("#OrgShortNameError").hide();
            }
        }

        $("#OrgShortName").keyup(updateOrgShortName);


    });

    function loadEvent(obj) {
        $.post('@Url.Action("getEvent", "dropdown")', obj, function (data, status) {
            if (status == "success") {
                populateDropdown("EventID", data);
            } else {
                console.log("No data");
            }
        });
    }

    function loadCountries(obj) {
        $.post('@Url.Action("getCountries", "dropdown")', obj, function (data, status) {
            if (status == "success") {
                populateDropdown("CountryID", data);
            }
        });
    }

    function loadStates(obj) {
        $.post('@Url.Action("getStates", "dropdown")', obj, function (data, status) {
            if (status === "success") {
                populateDropdown("StateID", data);
            }
        });
    }

    function loadCities(obj) {
        $.post('@Url.Action("getCities", "dropdown")', obj, function (data, status) {
            if (status === "success") {
                populateDropdown("CityID", data);
            }
        });
    }

    function loadOrg(obj) {
           $.post('@Url.Action("getOrg", "dropdown")', obj, function (data, status) {
         if (status == "success") {
             populateDropdown("OrgID", data);
         } else {
             console.log("No data");
         }
        });
    }

    $("#submitBtn").click(function () {
        var OrgID = $("#OrgID").val();

        var OrganisationName = $("#OrgID option:selected").text();
        var OrgName = $("#OrgName").val();
        var OrgShortName = $("#OrgShortName").val();
        var OrgPhone = $("#txtOrgPhone").val();
        var OrgEmail = $("#OrgEmail").val();
        var OrgAddress = $("#OrgAddress").val();
        var OrgPerson = $("#OrgContactPerson").val();

        console.log("OrganizationName", OrganisationName);
        console.log("OrgName", OrgName);
        console.log("OrgShortName", OrgShortName);
        console.log("OrgPhone", OrgPhone);
        console.log("OrgEmail", OrgEmail);
        console.log("address", OrgAddress);
        console.log("person", OrgPerson);



        var formData = new FormData();
        var fileInput = $("#file")[0].files[0];
        /*if (!fileInput) {
            Swal.fire("Error", "Please select a file.", "error");
            return;
        }*/

        formData.append("__RequestVerificationToken", token);
        formData.append("Salutation", $("#Salutation").val());
        formData.append("Name", $("#Name").val());
        formData.append("Address", $("#Address").val());
        formData.append("CountryID", $("#CountryID").val());
        formData.append("Country", $("#CountryID option:selected").text());
        formData.append("StateID", $("#StateID").val());
        formData.append("State", $("#StateID option:selected").text());
        formData.append("CityID", $("#CityID").val());
        formData.append("City", $("#CityID option:selected").text());
        formData.append("Pincode", $("#Pincode").val());
        formData.append("Email", $("#Email").val());
        formData.append("Mobile", $("#Mobile").val());
        formData.append("CSI_No", $("#CSI_No").val());
        formData.append("IEEE_No", $("#IEEE_No").val());
        formData.append("Category", $("#Category").val());
        formData.append("Password", $("#Password").val());
        formData.append("ConfirmPassword", $("#ConfirmPassword").val());
        formData.append("EventID", $("#EventID").val());
        formData.append("Event", $("#EventID option:selected").text());
        formData.append("file", $("#file")[0].files[0]);
        formData.append("OrgID", OrgID);
        formData.append("OrganizationName", OrganisationName);
        formData.append("OrgEmail", OrgEmail);
        formData.append("OrgName", OrgName);
        formData.append("OrgShortName", OrgShortName);
        formData.append("OrgAddress", OrgAddress);
        formData.append("OrgContactPerson", OrgPerson);
        formData.append("OrgPhone", OrgPhone);

        formData.forEach((value, key) => {
            console.log(key + ": " + value);
        });

        $("#submitBtn").prop("disabled", true); // Disable button to prevent double submission

        $.ajax({
            url: "@Url.Action("EditProfile", "Member")",
            type: "POST",
            data: formData,

            contentType: false,
            processData: false,

            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Profile Updated"
                    }).then(() => {
                        location.reload(); // Reloads after success
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: response.message || "Updation failed."
                    });
                    $("#submitBtn").prop("disabled", false); // Re-enable if failed
                }
            },
            error: function (xhr, status, error) {

                console.error("AJAX Error:", xhr.responseText);
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Something went wrong! " + xhr.responseText
                });
                $("#submitBtn").prop("disabled", false);
            }
        });
    });
</script>

